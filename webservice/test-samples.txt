# AWS Lambda Test Samples & List of ModelId
# #########################################
# The following samples can be used when creating a test on Amazon Lambda
# The Lambda function takes 3 parameters; prompt, secret, modelId, type
# prompt: Note that the prompt samples provided here can be different than what was used in the LLM Benchmark
# secret: Replace with a text that only you know. It is a primitive way of ensuring security to avoid unauthorized access
# type: Types of the LLMs that are offered in AWS Bedrock and can be tested using the associated code
# modelId: Ids of the LLMs that are available to test the list is at the bottom.

# amazon
{
  "prompt": "\n\nHuman: Tic-tac-toe is a game for two players, played on a 3 by 3 grid. The first player uses Xs, and the second player uses Os to mark one of the nine squares in the grid. A player wins by placing 3 of their marks in a horizontal, vertical, or diagonal row. To prevent losing, a player may place a mark to block their opponent from creating a row of 3. The previous moves of the tic-tac-toe game are given in a format that moves are separated by ';'.  Each move first gives the row number and then the column separated by a comma. The previous moves are as follows: The moves by the first player (marked by X): 1,2; 1,3; 1,1. The moves by the second player (marked by O): 2,2; 3,3. You are a master at the Tic-tac-toe game, and you are unbeatable. You are the second player.  What would be your next move? Do not explain your move. Just give it in the format 'response: row number, column number' for an available position, such as 'response: 1,3' \n\nAssistant:",
  "modelId": "amazon.titan-embed-text-v1",
  "secret": "YourSecretHereToAvoidUnAuthorizedAccess-PrimitiveWayOfEnsuringSecurity",
  "type": "amazon"
}

# anthropic
{
  "prompt": "\n\nHuman: Tic-tac-toe is a game for two players, played on a 3 by 3 grid. The first player uses Xs, and the second player uses Os to mark one of the nine squares in the grid. A player wins by placing 3 of their marks in a horizontal, vertical, or diagonal row. To prevent losing, a player may place a mark to block their opponent from creating a row of 3. The previous moves of the tic-tac-toe game are given in a format that moves are separated by ';'.  Each move first gives the row number and then the column separated by a comma. The previous moves are as follows: The moves by the first player (marked by X): 1,2; 1,3; 1,1. The moves by the second player (marked by O): 2,2; 3,3. You are a master at the Tic-tac-toe game, and you are unbeatable. You are the second player.  What would be your next move? Do not explain your move. Just give it in the format 'response: row number, column number' for an available position, such as 'response: 1,3' \n\nAssistant:",
  "modelId": "anthropic.claude-v2:1",
  "secret": "YourSecretHereToAvoidUnAuthorizedAccess-PrimitiveWayOfEnsuringSecurity",
  "type": "anthropic"
}

# ai21
{
  "prompt": "Tic-tac-toe is a game for two players, played on a 3 by 3 grid. The first player uses Xs, and the second player uses Os to mark one of the nine squares in the grid. A player wins by placing 3 of their marks in a horizontal, vertical, or diagonal row. To prevent losing, a player may place a mark to block their opponent from creating a row of 3. The previous moves of the tic-tac-toe game are given in a format that moves are separated by ';'.  Each move first gives the row number and then the column separated by a comma. The previous moves are as follows: The moves by the first player (marked by X): 1,2; 1,3; 1,1. The moves by the second player (marked by O): 2,2; 3,3. You are a master at the Tic-tac-toe game, and you are unbeatable. You are the second player.  What would be your next move? Do not explain your move. Just give it in the format 'response: row number, column number' for an available position, such as 'response: 1,3' ",
  "modelId": "ai21.j2-ultra-v1",
  "secret": "YourSecretHereToAvoidUnAuthorizedAccess-PrimitiveWayOfEnsuringSecurity",
  "type": "ai21"
}

# meta
{
  "prompt": "Tic-tac-toe is a game for two players, played on a 3 by 3 grid. The first player uses Xs, and the second player uses Os to mark one of the nine squares in the grid. A player wins by placing 3 of their marks in a horizontal, vertical, or diagonal row. To prevent losing, a player may place a mark to block their opponent from creating a row of 3. The previous moves of the tic-tac-toe game are given in a format that moves are separated by ';'.  Each move first gives the row number and then the column separated by a comma. The previous moves are as follows: The moves by the first player (marked by X): 1,2; 1,3; 1,1. The moves by the second player (marked by O): 2,2; 3,3. You are a master at the Tic-tac-toe game, and you are unbeatable. You are the second player.  What would be your next move? Do not explain your move. Just give it in the format 'response: row number, column number' for an available position, such as 'response: 1,3' ",
  "modelId": "meta.llama2-70b-chat-v1",
  "secret": "YourSecretHereToAvoidUnAuthorizedAccess-PrimitiveWayOfEnsuringSecurity",
  "type": "meta"
}


MODEL IDs
# #######

    modelId = 'meta.llama2-13b-chat-v1'
    modelId = 'meta.llama2-70b-chat-v1'
    modelId = 'meta.llama3-70b-instruct-v1:0'
    modelId = 'meta.llama3-8b-instruct-v1:0'

    modelId = 'anthropic.claude-v2' Claude 2
    modelId = 'anthropic.claude-v2:1' Claude 2.1
    modelId = 'anthropic.claude-3-sonnet-20240229-v1:0' Claude 3 Sonnet 
    modelId = 'anthropic.claude-3-haiku-20240307-v1:0' Claude 3 Haiku 

    modelId = 'mistral.mistral-large-2402-v1:0' Mistral Large

    modelId = 'ai21.j2-ultra-v1'

    # The following amazon LLMs are also available in the AWS Bedrock however the associated code does not work on these.
    modelId = 'amazon.titan-embed-text-v1'
    modelId = 'amazon.titan-text-express-v1'
    modelId = 'amazon.titan-text-lite-v1'
